// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.27/esri/copyright.txt for details.
//>>built
define("esri/dijit/geoenrichment/ReportPlayer/dataProvider/supportClasses/tasks/EnrichAreasTask","dojo/_base/declare dojo/_base/lang dojo/when dojo/promise/all esri/kernel esri/SpatialReference esri/tasks/FeatureSet ../GEUtil ../AnalysisAreaUtil ./parsers/FeatureSetParser ../../../core/supportClasses/map/Projector esri/dijit/geoenrichment/utils/CoordinateUtil".split(" "),function(r,g,h,n,t,l,u,v,p,w,x,m){function q(){var a=t.id.credentials[0];return a&&a.token}return r(null,{enrichAreas:function(a){var b=
{};return h(this._analysisAreasToStudyAreas(a.analysisAreas,a.countryID,a.comparisonLevels),function(d){b.studyAreas=d;a.report?b.analysisVariables=[{itemid:a.report.reportID,url:a.report.portalUrl,token:q(),outFields:["*"]}]:a.fields&&(b.analysisVariables=a.fields);return this._doRunTask(b,a,"enrich")}.bind(this)).then(this._handleFeatureSetsRequest.bind(this))},createReport:function(a){var b={f:"bin",format:"xml",reportfields:{}};b.report={itemid:a.report.reportID,url:a.report.portalUrl,token:q()};
return h(this._analysisAreasToStudyAreas(a.analysisAreas,a.countryID),function(d){b.studyAreas=d;return this._doRunTask(b,a,"createReport")}.bind(this))},_analysisAreasToStudyAreas:function(a,b,d){var e=this;d=d&&d.map(function(a){return{layer:a}});return n(a.map(function(a,f){var c;c=a.geographies&&a.geographies.length?e._studyAreaFromGeographies(a.geographies,b,!0):{attributes:g.mixin({},a.feature.attributes),geometry:a.feature.geometry.toJson()};d&&(c.comparisonLevels=d);return h(e._getStorePointForArea(a),
function(b){b&&(c.attributes=c.attributes||{},c.attributes.STORE_LAT=c.attributes.STORE_LAT||b.STORE_LAT,c.attributes.STORE_LONG=c.attributes.STORE_LONG||b.STORE_LONG);a.geographies||(c.attributes=c.attributes||{},c.attributes.STORE_ID=f+"");c.attributes&&w.ID_FIELDS.forEach(function(a){delete c.attributes[a]});return c})}))},_getStorePointForArea:function(a){if(a.location){var b=p.geometryToLatLong(a.location.geometry);return b?b:h(x.projectGeometries(a.location.geometry,new l(m.WGS_84_WKID)),function(a){return p.geometryToLatLong(a)})}},
createFeatureForGeographies:function(a,b){return this._createFeaturesForGeographies(a,b,!0).then(function(a){return a[0]})},createFeaturesForGeographies:function(a,b){return this._createFeaturesForGeographies(a,b,!1)},_createFeaturesForGeographies:function(a,b,d){a={returnGeometry:!0,outSR:b.outSR||new l(m.WEB_MERCATOR_WKID),studyAreas:d?[this._studyAreaFromGeographies(a,b.countryID,!0,b.generalizationLevel)]:a.map(function(a){return this._studyAreaFromGeographies([a],b.countryID,!1,b.generalizationLevel)},
this),dataCollections:["GlobalIntersect"]};return this._doRunTask(a,b,"enrich").then(this._handleFeatureSetsRequest.bind(this))},_studyAreaFromGeographies:function(a,b,d,e){b={sourceCountry:b,layer:null,ids:null,attributes:null};var k=null,f=[],c;a.forEach(function(a){if(!a||!a.id)throw Error("Wrong geography.");var b=a.levelId;if(b)if(!k)k=b;else if(d&&k!==b)throw Error("Geographies have different level IDs.");f.push(a.id);a.attributes&&(c=g.mixin(c||{},a.attributes))});b.layer=k;b.ids=d?[f.join(",")]:
f;b.attributes=c;b.generalizationlevel=e;return b},createFeaturesForBuffer:function(a,b){var d={bufferUnits:a.units,bufferRadii:a.radii||[a.radius],areaType:a.areaType||"RingBuffer"};"NetworkServiceArea"===d.areaType&&(d.travelMode=a.travelMode,d.networkOptions=a.networkOptions);a=a.point||a.polyline;d={returnGeometry:!0,outSR:b.outSR||a.spatialReference||new l(m.WEB_MERCATOR_WKID),dataCollections:["GlobalIntersect"],studyAreasOptions:d,studyAreas:[{geometry:a.toJson?a.toJson():a}]};return this._doRunTask(d,
b,"enrich").then(this._handleFeatureSetsRequest.bind(this))},createFeaturesForBuffers:function(a,b){var d={},e=[];a.forEach(function(a){var b;b=a.point||a.polyline;b=JSON.stringify(b.toJson?b.toJson():b)+";"+a.units+";"+a.areaType+";"+a.travelMode+";"+JSON.stringify(a.networkOptions);var c=d[b];c||(c=d[b]=g.clone(a),delete c.radius,c.radii=[],e.push(c));a.radii?c.radii=c.radii.concat(a.radii):c.radii.push(a.radius)});return n(e.map(function(a){return this.createFeaturesForBuffer(a,b)},this)).then(function(a){var b=
[];a.forEach(function(a){b=b.concat(a)});return b})},_doRunTask:function(a,b,d){a=g.mixin({useData:{sourceCountry:b.countryID,hierarchy:b.hierarchy||"census"},forStorage:!1},a);return v[d](a)},_handleFeatureSetsRequest:function(a){return(new u(a[0])).features}})});